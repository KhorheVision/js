{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/modules/calc.js","webpack:///./js/modules/cards.js","webpack:///./js/modules/forms.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/slider.js","webpack:///./js/modules/tabs.js","webpack:///./js/modules/timer.js","webpack:///./js/script.js","webpack:///./js/services/services.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F,iBAAiB;AACjB;AACA;AACA,iFAAiF;AACjF;;AAEA;AACA;AACA,iBAAiB,EAAE;;AAEnB,wDAAwD;;AAExD;AACA,aAAa,EAAE;AACf,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACpHnB;AAAA;AAE8B;;;;AAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,aAAa;AACb,sFAAsF;AACtF,aAAa;AACb;AACA,+BAA+B,SAAS,OAAO,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA,SAAS;AACT;;AAEA,IAAI,sEAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS,EAAE;;AAEX;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,iCAAiC;AAC3D;;AAEA;;AAEA;AACA,8BAA8B,IAAI,OAAO,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACrHpB;AAAA;AAAA;AAGiB;AAGa;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,KAAK,EAAE;;AAEP;AACA,0DAA0D;AAC1D,yCAAyC;;AAEzC,sEAAsE;AACtE,wDAAwD;AACxD,8DAA8D;AAC9D,6CAA6C;;AAE7C;AACA,qDAAqD;;AAErD,qFAAqF;AACrF,sDAAsD;;AAEtD,yCAAyC;;AAEzC;AACA;AACA,wDAAwD;AACxD,sEAAsE;AACtE,uCAAuC;AACvC;AACA;AACA,2BAA2B,QAAQ;AACnC,uBAAuB;AACvB,sEAAsE;AACtE;AACA,mBAAmB,EAAE;AACrB,eAAe,EAAE;;AAEjB,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4EAA4E;AAC5E;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA,gBAAgB,EAAE;;AAElB,uDAAuD;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB,YAAY;;AAEZ,QAAQ;;;;AAIR;AACA;AACA;;AAEA,kEAAkE;AAClE,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA,sEAAsE;;AAEtE;AACA;;AAEA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,iBAAiB,EAAE;;AAEnB;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,oBAAoB;AACpB,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,YAAY,mEAAQ;AACpB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;;AAEjB,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,QAAQ,wDAAS;;AAEjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,YAAY,yDAAU;AACtB,SAAS,QAAQ;AACjB,KAAK;AACL;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC/NpB;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF;AACrF,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;AACA;;AAEe,oEAAK,EAAC;AAGnB;;;;;;;;;;;;;ACzDF;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;;AAEZ;;AAEA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,cAAc;AACjD,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;AACZ,mDAAmD;AACnD;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA,0CAA0C,WAAW;AACrD,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;ACrNrB;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA,6CAA6C;AAC7C,gDAAgD;AAChD;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA,+CAA+C;;AAE/C;AACA;AACA,uCAAuC;AACvC,0CAA0C;AAC1C;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA,KAAK;AACL;;AAEe,mEAAI,E;;;;;;;;;;;;ACnDnB;AAAA;AACA;;AAEA;AACA,+DAA+D;AAC/D,2DAA2D;AAC3D,8DAA8D;AAC9D,yDAAyD;AACzD,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACxDpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACkC;AACE;AACA;AACA;AACF;AACE;AACE;AAGb;;AAEzB;AACA,0CAA0C,gEAAS;AACnD;AACA,IAAI,6DAAI;AACR,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,8DAAK;AACT,IAAI,6DAAI;AACR,IAAI,8DAAK;AACT,IAAI,+DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA,uCAAuC;AACvC,gCAAgC;AAChC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,EAAE;;AAEF;AACA;;AAEA,kBAAkB;AAClB,2CAA2C,IAAI,WAAW,WAAW,GAAG;AACxE;;AAEA;AACA,EAAE;;AAIA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/script.js\");\n","function calc() {\r\n    /* Калькулятор Start*/\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    } // в localStorage записываем ключ sex и его изменения\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    } // работает также как и выше только с физической активностью\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass); // удаляем класс активности\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            } //если id совпадает со значением из localStorage то добавляем класс активности\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            } // смысл такой же как и выше\r\n        });\r\n    } //функция будет срабатывать один раз, чтобы установить активный класс на нужные блоки\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        } // если хоть в одно переменной нет значения, то результат будет показывать ____\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        } // формула расчёта в зависимости от того какой пол выбран\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(Selector, activeClass) {\r\n        const elements = document.querySelectorAll(Selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (event) => {\r\n                if (event.target.getAttribute('data-ratio')) {\r\n                    // если такой атрибут пресутствует у объекта события, то ratio присваиваем значение атрибута у дива по которому кликнули\r\n                    ratio = +event.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +event.target.getAttribute('data-ratio')); // запоминается выбраная физическая активность в localStorage\r\n                } else {\r\n                    // если условие не стработает, то мы понимаем, что работаем с полом. получаем id\r\n                    sex = event.target.getAttribute('id');\r\n                    localStorage.setItem('sex', event.target.getAttribute('id')); // запоминается выбраный пол в localStorage\r\n                }\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                }); // удаляем класс активности у всех\r\n\r\n                event.target.classList.add(activeClass); // добавляем класс активности на элемент по которому кликнули\r\n\r\n                calcTotal();\r\n            }); // отслеживаем клики по родительскому элементу, который содержит все дивы. будем использовать делегирование событий\r\n        });\r\n    } // данную функцию будем использовать на нескольких элементах\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            } // если пользователь вводит не число, то поле подсвечивается красным\r\n\r\n            switch (input.getAttribute('id')) {\r\n                // проверяем какой id у input где вводим информацию\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    } // функция которая будет обрабатывать каждый отдельный инпут\r\n\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n    /* Калькулятор End*/\r\n}\r\n\r\nexport default calc;","import {\r\n    getResource\r\n} from '../services/services';\r\n\r\n\r\n\r\nfunction cards() {\r\n    /* Использование Class для карточек Start*/\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        } // перевод в гривны\r\n\r\n        render() {\r\n            const element = document.createElement(\"div\");\r\n            if (this.classes.length === 0) {\r\n                this.element = \"menu__item\"; // если будем использовать несколько раз\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach((className) => element.classList.add(className)); // добавляем переданные классы к созданному div\r\n            } // данное условие даёт возможность добавить класс по умолчанию, если мы не передали ни один класс\r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}\">\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `;\r\n            this.parent.append(element);\r\n        } // отрисовка на странице\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => {\r\n                new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n            });\r\n        }); // с помощью запроса на сервер получаем массив который содержит меню (массив с объектами). перебираем массив через forEach. И тот объект который находится внутри разбираем по отдельным частям и эти же части передаем во внутрь конструктора класса который создаёт новую карточку на странице и сразу размещает\r\n\r\n    // Способ который будет формировать классы налету\r\n    // Данный способ можно использовать чтобы вызвать что-то всего 1 раз и шаблоны не нужны\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data));\r\n\r\n    // function createCard(data) {\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n\r\n    //         element.classList.add(\"menu__item\");\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         document.querySelector(\".menu .container\").append(element);\r\n    //     });\r\n    // }\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     \".menu .container\",\r\n    //     \"menu__item\"\r\n    // ).render(); // можно записывать и так. т.е. не приспавивать в какую-нибудь переменную. Просто выполниться 1 раз и ни где нельзя больше использовать\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     \"Меню “Премиум”\",\r\n    //     \"В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!\",\r\n    //     14,\r\n    //     \".menu .container\",\r\n    //     \"menu__item\"\r\n    // ).render();\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     'Меню \"Постное\"',\r\n    //     \"Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.\",\r\n    //     21,\r\n    //     \".menu .container\",\r\n    //     \"menu__item\"\r\n    // ).render();\r\n    /* Использование Class для карточек End*/\r\n}\r\n\r\nexport default cards;","import {\r\n    closeModal,\r\n    openModal\r\n} from './modal';\r\nimport {\r\n    postData\r\n} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    /* Использование AJAX и XMLHttpRequest для отправки формы Start*/\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: \"img/form/spinner.svg\",\r\n        success: \"Спасибо! скоро с вами свяжемся\",\r\n        failure: \"Что-то пошло не так...\",\r\n    }; // объект фраз которые будут показывать при определенном статусе загрузки данных на сервер\r\n\r\n    forms.forEach((item) => {\r\n        bindPostData(item);\r\n    }); // берем все формы и выполняем функцию, которая будет отправлять данные из формы на сервер\r\n\r\n    /*     function postData(form) {\r\n              form.addEventListener('submit', (event) => { // использует событие submit которое реагирует на отправку формы\r\n                  event.preventDefault(); // отменяем действие браузера по умолчанию, чтобы страница не перезагружалась\r\n\r\n                  const statusMessage = document.createElement('div'); // создаём div где будет выводится информация о статусе\r\n                  statusMessage.classList.add('status'); // добавляем класс для задания в будещем css свойств\r\n                  statusMessage.textContent = message.loading; // будет показывать сообщение 'Загрузка'\r\n                  form.append(statusMessage); // добавляем к форме сообщение о статусе\r\n\r\n                  const request = new XMLHttpRequest();\r\n                  request.open('POST', 'server.php'); // Прописываем метод и путь куда будем ссылаться\r\n\r\n                  // request.setRequestHeader('Contant-type', 'multipart/form-data'); // когда используем связку XMLHttpRequest объекта и FormData, заголовок устанавливать не нужно, так как он устанавливается автоматически\r\n                  const formData = new FormData(form); // FormData позволяет собрать данные из заполненой формы. В вёрстке обязательно в input надо прописывать атрибут name\r\n\r\n                  request.send(formData); // отправка данных из форма на сервер\r\n\r\n                  request.addEventListener('load', () => {\r\n                      if (request.status === 200) {\r\n                          console.log(request.response); // смотрим, что ушло на сервер\r\n                          statusMessage.textContent = message.success; // когда всё отправиться изменится сообщение на 'Спасибо! скоро с вами свяжемся'\r\n                          form.reset(); // очищает форму\r\n                          setTimeout(() => {\r\n                              statusMessage.remove();\r\n                          }, 2000); // через две секунды убираем сообщение статуса\r\n                      } else {\r\n                          statusMessage.textContent = message.failure; // когда призойдёт ошибка изменится сообщение на 'Что-то пошло не так...'\r\n                      }\r\n                  }); //отслеживаем загрузку данных на сервер, чтобы можно было реализовать определенные действия на странице. Например загрузка, благодарность и т.д.\r\n              }); // данная функция отправляет данные в обычном формате\r\n\r\n          } // функция которая будет отвечать за постинг данных */\r\n\r\n    // function postData(form) {\r\n    //     form.addEventListener('submit', (event) => {\r\n    //         event.preventDefault();\r\n\r\n    //         const statusMessage = document.createElement('div');\r\n    //         statusMessage.classList.add('status');\r\n    //         statusMessage.textContent = message.loading;\r\n    //         'Загрузка'\r\n    //         form.append(statusMessage);\r\n\r\n    //         const request = new XMLHttpRequest();\r\n    //         request.open('POST', 'server.php');\r\n\r\n    //         request.setRequestHeader('Contant-type', 'application/json'); // задаём заголовок, чтобы сказать что будет JSON\r\n    //         const formData = new FormData(form);\r\n\r\n    //         const object = {}; // создаём пустой объект\r\n    //         // перебер formData c помощью цикла forEach и поместим данные в пустой объект, который создали выше\r\n    //         formData.forEach(function (value, key) {\r\n    //             object[key] = value;\r\n    //         }); // Получаем новый обычный объект с данными\r\n\r\n    //         const jsonData = JSON.stringify(Object); // превращаем обычный объект в json-объект, который можно отправить на сервер\r\n\r\n    //         request.send(jsonData);\r\n\r\n    //         request.addEventListener('load', () => {\r\n    //             if (request.status === 200) {\r\n    //                 console.log(request.response);\r\n    //                 statusMessage.textContent = message.success;\r\n    //                 form.reset();\r\n    //                 setTimeout(() => {\r\n    //                     statusMessage.remove();\r\n    //                 }, 2000);\r\n    //             } else {\r\n    //                 statusMessage.textContent = message.failure;\r\n    //             }\r\n    //         });\r\n    //     });\r\n\r\n    // }  // данная функция отправляет данные в формате JSON\r\n\r\n\r\n\r\n    /*     function bindPostData(form) {\r\n            form.addEventListener(\"submit\", (event) => {\r\n                event.preventDefault();\r\n\r\n                let statusMessage = document.createElement(\"img\"); //создаём элемент img\r\n                statusMessage.src = message.loading; // передаём ссылку на картинку в атрибут src\r\n                statusMessage.style.cssText = `\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                    width: 50px;\r\n                    height: 50px;\r\n                `;\r\n\r\n                form.insertAdjacentElement(\"afterend\", statusMessage); // добавляем нашу картинку загрузки после формы\r\n\r\n                // const request = new XMLHttpRequest();\r\n                // request.open('POST', 'server.php');\r\n\r\n                const formData = new FormData(form);\r\n\r\n                const object = {}; // создаём пустой объект\r\n                // перебер formData c помощью цикла forEach и поместим данные в пустой объект, который создали выше\r\n                formData.forEach(function (value, key) {\r\n                    object[key] = value;\r\n                }); // Получаем новый обычный объект с данными\r\n\r\n                // request.send(formData);\r\n                //   fetch(\"server.php\", {\r\n                //     method: \"POST\",\r\n                //     // headers: {\r\n                //     //     'Contant-type': 'application/json'\r\n                //     // }, // не пишем так как отправляем formData. Если ниже прописываем JSON.stringify(Object), то надо раскомментировать\r\n                //     body: formData, // прописываем JSON.stringify(Object) если хотим отрпавить json объект\r\n                //   })\r\n                postData(\"http://localhost:3000/requests\", JSON.stringify(object))\r\n                    // .then((data) => data.text()) // превращаем ответ в обычный текст\r\n                    .then((data) => {\r\n                        console.log(data);\r\n                        showThanksModal(message.success);\r\n                        statusMessage.remove();\r\n                    })\r\n                    .catch(() => {\r\n                        showThanksModal(message.failure);\r\n                    })\r\n                    .finally(() => {\r\n                        form.reset();\r\n                    });\r\n\r\n                // request.addEventListener('load', () => {\r\n                //     if (request.status === 200) {\r\n                //         console.log(request.response);\r\n                //         showThanksModal(message.success);\r\n                //         form.reset();\r\n                //         statusMessage.remove();\r\n                //     } else {\r\n                //         showThanksModal(message.failure);\r\n                //     }\r\n                // });\r\n            });\r\n        } */\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener(\"submit\", (event) => {\r\n            event.preventDefault();\r\n\r\n            let statusMessage = document.createElement(\"img\");\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n             display: block;\r\n             margin: 0 auto;\r\n             width: 50px;\r\n             height: 50px;\r\n         `;\r\n\r\n            form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n            const formData = new FormData(form);\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n            // в начале берем formData и преврашаем в массив масивов. Потом превращаем в классический объект. А после превращаем в json\r\n            // Object.fromEntries -  преобразует список пар ключ-значение в объект.\r\n\r\n            postData(\"http://localhost:3000/requests\", json)\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove();\r\n                })\r\n                .catch(() => {\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    form.reset();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector(\".modal__dialog\");\r\n\r\n        prevModalDialog.classList.add(\"hide\");\r\n        openModal('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement(\"div\");\r\n        thanksModal.classList.add(\"modal__dialog\");\r\n        thanksModal.innerHTML = `\r\n         <div class=\"modal__content\">\r\n             <div class=\"modal__close\" data-close>×</div>\r\n             <div class=\"modal__title\">${message}</div>\r\n         </div>\r\n     `;\r\n\r\n        document.querySelector(\".modal\").append(thanksModal); // добавляем созданное модальное окно со статусом\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add(\"show\");\r\n            prevModalDialog.classList.remove(\"hide\");\r\n            closeModal('.modal');\r\n        }, 4000); // через 4 секунды будем убирать thanksModal, чтобы обратно отобразить форму. также закрываем модальное окно\r\n    } // функция которая добавит красоты после отправки формы\r\n    /* Использование AJAX и XMLHttpRequest для отправки формы End*/\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.style.display = \"block\";\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    if (modalTimerId) {\r\n        clearTimeout(modalTimerId);\r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.style.display = \"none\";\r\n    document.body.style.overflow = \"\";\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    /* Модальное окно Start*/\r\n    const modal = document.querySelector(modalSelector);\r\n    const modalOpen = document.querySelectorAll(triggerSelector);\r\n\r\n    modalOpen.forEach((item) => {\r\n        item.addEventListener(\"click\", () => openModal(modalSelector, modalTimerId)); // выполняет коллбэк функцию и внутри выполняется openModal\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (event) => {\r\n        if (\r\n            event.target === modal ||\r\n            event.target.getAttribute(\"data-close\") == \"\"\r\n        ) {\r\n            closeModal(modalSelector);\r\n        }\r\n    }); //данное собитие выполнится даже в новосозданном элементе\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n        if (event.code === \"Escape\" && modal.style.display === \"block\") {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (\r\n            window.pageYOffset + document.documentElement.clientHeight >=\r\n            document.documentElement.scrollHeight\r\n        ) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener(\"scroll\", showModalByScroll); // позволяет сделать так чтобы действие при скролле выполнилось один раз и удалилось\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", showModalByScroll);\r\n    /* Модальное окно End*/\r\n}\r\n\r\nexport default modal;\r\nexport {\r\n    closeModal\r\n};\r\nexport {\r\n    openModal\r\n};","function slider({\r\n    container,\r\n    slide,\r\n    nextArrow,\r\n    prevArrow,\r\n    totalCounter,\r\n    correntCounter,\r\n    wrapper,\r\n    field\r\n}) {\r\n    /* Слайдер 1 версия Start*/\r\n    // const slides = document.querySelectorAll('.offer__slide');\r\n    // const prev = document.querySelector('.offer__slider-prev');\r\n    // const next = document.querySelector('.offer__slider-next');\r\n    // const total = document.querySelector('#total');\r\n    // const current = document.querySelector('#current');\r\n    // let slideIndex = 1;\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => {\r\n    //         item.style.display = 'none';\r\n    //     });\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n    /* Слайдер 1 версия End*/\r\n\r\n    /* Слайдер 2 версия Start*/\r\n    const slides = document.querySelectorAll(slide);\r\n    const prev = document.querySelector(prevArrow);\r\n    const next = document.querySelector(nextArrow);\r\n    const total = document.querySelector(totalCounter);\r\n    const current = document.querySelector(correntCounter);\r\n    const slidesWrapper = document.querySelector(wrapper);\r\n    const slidesField = document.querySelector(field);\r\n    const width = window.getComputedStyle(slidesWrapper).width;\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        // if (offset === +width.slice(0, width.length - 2) * (slides.length - 1)) {\r\n        //     offset = 0;\r\n        // } else {\r\n        //     offset += +width.slice(0, width.length - 2);\r\n        // } // можно использовать slice() с помощью которого мы отсекаем 2 последних символа, чтобы получить число\r\n\r\n        // if (offset === +width.replace(/\\D/g, '') * (slides.length - 1)) {\r\n        //     offset = 0;\r\n        // } else {\r\n        //     offset += +width.replace(/\\D/g, ''); //позволяет отсечь от цифр не нужные символы, чтобы получить число с которым можно дальше работать\r\n        // }\r\n\r\n        if (offset === deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        } // также можно использовать отдельно написаную функцию\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex === slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //точки\r\n        dots.forEach(dot => {\r\n            dot.style.opacity = '0.5';\r\n        });\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset === 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex === 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //точки\r\n        dots.forEach(dot => {\r\n            dot.style.opacity = '0.5';\r\n        });\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    /* Слайдер 2 версия End*/\r\n\r\n    /* Слайдер точка(навигация) Start*/\r\n    const slider = document.querySelector(container);\r\n    const dots = [];\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol');\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        if (i === 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n    // дальше точки в функции next и prev\r\n\r\n\r\n    //клики по точкам\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (event) => {\r\n            const slideTo = event.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            dots.forEach(dot => {\r\n                dot.style.opacity = '0.5';\r\n            });\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n    /* Слайдер точка(навигация) End*/\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    /* ТАБЫ Start*/\r\n    const tabs = document.querySelectorAll(tabsSelector);\r\n    const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n    const tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach((item) => {\r\n            item.style.display = \"none\"; // чаще используют не этот метод, а добавляют специально созданные классы\r\n\r\n            /*\r\n                  ПРИМЕР\r\n                  item.classList.add('hide'); - добавляем класс и скрываем элемент\r\n                  item.classList.remove('show'); - удаляем класс чтобы можно было скрыть элемент\r\n                  */\r\n        });\r\n\r\n        tabs.forEach((item) => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    } // для начала скрываем весь контент. + удаляем класс активности у таба\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].style.display = \"block\"; // чаще используют не этот метод, а добавляют специально созданные классы\r\n\r\n        /*\r\n            ПРИМЕР\r\n            item.classList.add('show'); - добавляем класс и показываем элемент\r\n            item.classList.remove('hide'); - удаляем класс чтобы можно было показать элемент\r\n            */\r\n\r\n        tabs[i].classList.add(activeClass);\r\n    } // i - это номер элемента в псевдомассиве который мы получили. Показываем по умолчанию 1 элемент с контентом + к первому табу добовляем класс активности.\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener(\"click\", (event) => {\r\n        const target = event.target; // отлавливает где был клик\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            }); //item - каждый таб, i - номер таба в псевдомассиве. Если тот элемент в который мы кликнули будет совпадать с элементом который мы перебераем и это один и тотже элемент то мы вызываем 2 функции, которые написали ранее. и в showTabContent(i) мы передаём i - тоесть номер таба который совпал\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n    /* Таймер Start*/\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()); // разница между дедлайном и текущим временем в миллисекундах\r\n        const days = Math.floor(t / (1000 * 60 * 60 * 24)); // получаем сколько суток осталось до нужно даты. 1000 миллисекунд * 60 (количество миллесекунд в одной минуте). 1000 * 60 * 60 (количество миллесекунд в одном часе). 1000 * 60 * 60 * 24 (количество миллесекунд в одних сутках)\r\n        const hours = Math.floor((t / (1000 * 60 * 60)) % 24); // получаем остаток часов до нужно дедлайна. Дни откидываем, а оставшиеся часы записываем\r\n        const minutes = Math.floor((t / 1000 / 60) % 60); // получаем остаток минут до нужно дедлайна. Дни и часы откидываем, а оставшиеся минуты записываем\r\n        const seconds = Math.floor((t / 1000) % 60); // получаем остаток секунд до нужно дедлайна. Дни, часы, минуты откидываем, а оставшиеся минуты записываем\r\n\r\n        return {\r\n            total: t,\r\n            days: days,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            seconds: seconds,\r\n        }; // возвращаем объект\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    } // функция которая к числам от 1 до 9 добавляет перед ними 0\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector); // получаем блок с таймером\r\n        const days = timer.querySelector(\"#days\");\r\n        const hours = timer.querySelector(\"#hours\");\r\n        const minutes = timer.querySelector(\"#minutes\");\r\n        const seconds = timer.querySelector(\"#seconds\");\r\n        const timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); //запускаем первый раз чтобы небыло мегания при загрузке страницы\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            // отображение на странице\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        } // функция обновления таймера каждую секунду\r\n    } //функция которая установит таймер на страницу\r\n\r\n    setClock(id, deadline);\r\n    /* Таймер End*/\r\n}\r\n\r\nexport default timer;","\" use strict \";\r\n// подключаем модули\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport {\r\n    openModal\r\n} from './modules/modal';\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n    // вызываем выполнение модулей\r\n    tabs(\".tabheader__item\", \".tabcontent\", \".tabheader__items\", \"tabheader__item_active\");\r\n    modal(\"[data-modal]\", \".modal\", modalTimerId);\r\n    timer('.timer', '2020-10-11');\r\n    cards();\r\n    calc();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        correntCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offset-slider-inner'\r\n    });\r\n});","const postData = async (url, data) => { // async говорит, что внутри функции будет асинхронный код\r\n    let res = await fetch(url, { // await ставим перед теми операциями, которые нужно дождаться результата\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();\r\n}; // функционал по общению с сервером. Функция настраивает запрос. Отправляет запрос на сервер, получает ответ и трансформирует в json\r\n\r\nconst getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) { // например что-то посло не так, то выкидываем ошибку\r\n        throw new Error(`Could not fetch ${url}, status ${res.status}`); // позволяет выкинуть новую ошибку, которую конструируем руками. Выведет статус ошибки и по какому url\r\n    }\r\n\r\n    return await res.json();\r\n}; // делаем запрос, ожидаем его окончания и преобразуем в обычный объект\r\n\r\nexport {\r\n    postData\r\n};\r\nexport {\r\n    getResource\r\n};"],"sourceRoot":""}